# - *- coding: utf- 8 - *-
from contextlib import suppress

from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message
from aiogram.utils.exceptions import CantParseEntities, MessageCantBeDeleted

from tgbot.data.loader import dp
from tgbot.keyboards.inline_admin import category_edit_open_finl, position_edit_open_finl, category_edit_delete_finl, \
    position_edit_delete_finl, position_edit_cancel_finl, category_edit_cancel_finl
from tgbot.keyboards.inline_all import category_remove_confirm_inl, position_remove_confirm_inl, \
    close_inl
from tgbot.keyboards.inline_page import *
from tgbot.keyboards.inline_promocode import promocodes_create_swipe_fp, promocodes_type_change, \
    promocode_create_cancel_finl, promocode_create_first_buy, promocode_create_one_client, promocode_create_confirm, \
    promocode_edit_menu, promocode_delete_confirm
from tgbot.keyboards.reply_all import menu_frep, promocodes_frep
from tgbot.services.api_sqlite import *
from tgbot.utils.misc.bot_filters import IsAdmin
from tgbot.utils.misc_functions import get_position_admin


# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.message_handler(IsAdmin(), text="üéü –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ ‚ûï", state="*")
async def promocodes_create(message: Message, state: FSMContext):
    await state.finish()

    # await state.set_state("here_promocode_name")
    await message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ, –Ω–∞ –∫–∞–∫—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ –±—É–¥–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å—Å—è –ø—Ä–æ–º–æ–∫–æ–¥</b>", reply_markup=promocodes_create_swipe_fp(0))


# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–æ–º–æ–∫–æ–¥
@dp.callback_query_handler(IsAdmin(), text_startswith="promocodes_create_open:", state="*")
async def promocode_create_open(call: CallbackQuery, state: FSMContext):
    category_id = call.data.split(":")[1]

    await state.update_data(here_cache_category_id=int(category_id))

    get_positions = len(get_positionsx(category_id=category_id))
    get_category = get_categoryx(category_id=category_id)

    await call.message.edit_text(f"<b>üóÉ –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category['category_name']}</code></b>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 f"üìÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{get_positions}—à—Ç</code>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "üéü –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ: ",
                                 reply_markup=promocodes_type_change(category_id)
                                 )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_type:", state="*")
async def promocode_change_type(call: CallbackQuery, state: FSMContext):
    code_type = call.data.split(":")[1]

    await state.update_data(here_change_promocode_type=code_type)
    await state.set_state("here_promocode_name")

    await call.message.edit_text("üéü –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ (–∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ) üè∑")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.message_handler(IsAdmin(), state="here_promocode_name")
async def here_promocode_name_get(message: Message, state: FSMContext):
    if len(message.text) <= 50:
        await state.update_data(here_promocode_name=clear_html(message.text))

        await state.set_state("here_activation_count")
        await message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥</b>\n"
                             "‚ùï –ü—Ä–∏—à–ª–∏—Ç–µ <code>0</code> —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –±—ã–ª–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏."
                             )
    else:
        await message.answer("<b>‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
                             "üéü –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ (–∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ) üè∑",
                             reply_markup=promocode_create_cancel_finl())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.message_handler(IsAdmin(), state="here_activation_count")
async def here_promocode_activation_count(message: Message, state: FSMContext):
    if message.text.isdigit():
        if 0 <= int(message.text) <= 10000000:
            if int(message.text) == 0:
                await state.update_data(here_activation_count=int(message.text))

                await state.set_state("here_promo_code_validity_period")
                await message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥, –ø—Ä–∏–º–µ—Ä: <code>26.01.23</code></b>")
            else:
                await state.update_data(here_activation_count=int(message.text))

                await state.set_state("here_minimum_order_amount")
                await message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥</b>\n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                     "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                                     "‚ùï –ü—Ä–∏—à–ª–∏—Ç–µ <code>0</code> —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞."
                                     )
        else:
            await message.answer(
                "<b>‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1 –∏–ª–∏ –±–æ–ª—å—à–µ 10 000 000.</b>\n"
                "üéü –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥\n"
                "‚ùï –ü—Ä–∏—à–ª–∏—Ç–µ <code>0</code> —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –±—ã–ª–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏.",
                reply_markup=promocode_create_cancel_finl())
    else:
        await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.</b>\n"
                             "üéü –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥\n"
                             "‚ùï –ü—Ä–∏—à–ª–∏—Ç–µ <code>0</code> —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –±—ã–ª–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏.",
                             reply_markup=promocode_create_cancel_finl())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler(IsAdmin(), state="here_promo_code_validity_period")
async def here_promocode_activation_count(message: Message, state: FSMContext):
    if len(message.text) == 8:
        by1 = message.text.split(".")[0]
        by2 = message.text.split(".")[1]
        by3 = message.text.split(".")[2]

        print(f'{by1}, {by2}, {by3}')

        if by1.isdigit() and by2.isdigit() and by3.isdigit():
            await state.update_data(here_promo_code_validity_period=message.text)

            await state.set_state("here_minimum_order_amount")
            await message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥</b>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                                 "‚ùï –ü—Ä–∏—à–ª–∏—Ç–µ <code>0</code> —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞."
                                 )
        else:
            await message.answer(
                "<b>‚ùå –î–∞—Ç–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ –≤–µ—Ä–Ω–æ, –Ω–∞ –º–µ—Å—Ç–µ —Ü–∏—Ñ—Ä –±—É–∫–≤—ã.</b>\n"
                "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                "üéü –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥, –ø—Ä–∏–º–µ—Ä: <code>26.01.23</code>",
                reply_markup=promocode_create_cancel_finl())
    else:
        await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.</b>"
                             "üéü –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –¥–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –ø—Ä–æ–º–æ–∫–æ–¥, –ø—Ä–∏–º–µ—Ä: <code>04.02.23</code>",
                             reply_markup=promocode_create_cancel_finl())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤
@dp.message_handler(IsAdmin(), state="here_minimum_order_amount")
async def here_promocode_activation_count(message: Message, state: FSMContext):
    async with state.proxy() as data:
        promo_type = data['here_change_promocode_type']

        if message.text.isdigit():
            if 0 <= int(message.text) <= 10000000:
                await state.update_data(here_minimum_order_amount=int(message.text))

                if promo_type == "currency":
                    await state.set_state("here_discount_amount_currency")
                    await message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –≤–∞–ª—é—Ç–µ</b>\n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                         "<code>–ù–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100, –æ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –æ—Ç–Ω—è—Ç–æ 100 –≥—Ä–Ω. –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ —Å—É–º–º–∞ –±—ã–ª–∞ 400, —Ç–æ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏, —Å—É–º–º–∞ —Å—Ç–∞–Ω–µ—Ç 300.</code>\n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                         "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                                         )
                elif promo_type == "percentage":
                    await state.set_state("here_discount_amount_percentage")
                    await message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö</b>\n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                         "<code>–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è 10. –°–∫–∏–¥–∫–∞ –±—É–¥–µ—Ç 10% —Ç.–µ. –ø—Ä–∏ –∫–æ–Ω–µ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ 100, –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç 90. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100 –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!!!</code>\n"
                                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                         "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                                         )
            else:
                await message.answer(
                    "<b>‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1 –∏–ª–∏ –±–æ–ª—å—à–µ 10 000 000.</b>\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "üéü –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥\n"
                    "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                    "‚ùï –ü—Ä–∏—à–ª–∏—Ç–µ <code>0</code> —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞.",
                    reply_markup=promocode_create_cancel_finl())
        else:
            await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.</b>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "üéü –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥\n"
                                 "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                                 "‚ùï –ü—Ä–∏—à–ª–∏—Ç–µ <code>0</code> —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞.",
                                 reply_markup=promocode_create_cancel_finl())


@dp.message_handler(IsAdmin(), state="here_discount_amount_currency")
async def here_promocode_discount_amount_currency(message: Message, state: FSMContext):
    if message.text.isdigit():
        if 0 <= int(message.text) <= 10000000:
            await state.update_data(here_discount_amount_currency=int(message.text))

            await message.answer("üéü –ü—Ä–æ–º–æ–∫–æ–¥ –±—É–¥–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É?",
                                 reply_markup=promocode_create_first_buy())
        else:
            await message.answer("‚ùå –í–∞–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏ –±–æ–ª—å—à–µ 10 000 000 000."
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –≤–∞–ª—é—Ç–µ\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "<code>–ù–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100, –æ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –æ—Ç–Ω—è—Ç–æ 100 –≥—Ä–Ω. –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ —Å—É–º–º–∞ –±—ã–ª–∞ 400, —Ç–æ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏, —Å—É–º–º–∞ —Å—Ç–∞–Ω–µ—Ç 300.</code>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                                 reply_markup=promocode_create_cancel_finl()
                                 )
    else:
        await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. <code>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º.</code></b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –≤–∞–ª—é—Ç–µ\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "<code>–ù–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100, –æ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –æ—Ç–Ω—è—Ç–æ 100 –≥—Ä–Ω. –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ —Å—É–º–º–∞ –±—ã–ª–∞ 400, —Ç–æ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏, —Å—É–º–º–∞ —Å—Ç–∞–Ω–µ—Ç 300.</code>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                             reply_markup=promocode_create_cancel_finl())


@dp.message_handler(IsAdmin(), state="here_discount_amount_percentage")
async def here_promocode_discount_amount_currency(message: Message, state: FSMContext):
    if message.text.isdigit():
        if 0 <= int(message.text) <= 100:
            await state.update_data(here_discount_amount_percentage=int(message.text))

            await message.answer("<b>üéü –ü—Ä–æ–º–æ–∫–æ–¥ –±—É–¥–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É?</b>",
                                 reply_markup=promocode_create_first_buy())
        else:
            await message.answer(
                "<b>‚ùå –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏ –±–æ–ª—å—à–µ 100.</b>\n"
                "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö\n"
                "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                "<code>–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è 10. –°–∫–∏–¥–∫–∞ –±—É–¥–µ—Ç 10% —Ç.–µ. –ø—Ä–∏ –∫–æ–Ω–µ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ 100, –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç 90. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100 –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!!!</code>\n"
                "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                reply_markup=promocode_create_cancel_finl())
    else:
        await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. <code>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º.</code></b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "<code>–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è 10. –°–∫–∏–¥–∫–∞ –±—É–¥–µ—Ç 10% —Ç.–µ. –ø—Ä–∏ –∫–æ–Ω–µ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ 100, –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç 90. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100 –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!!!</code>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                             reply_markup=promocode_create_cancel_finl())


@dp.callback_query_handler(IsAdmin(), text_startswith="first_buy:", state="*")
async def promocode_change_first_buy(call: CallbackQuery, state: FSMContext):
    data = call.data.split(":")[1]

    await state.update_data(here_change_first_buy=data)

    await call.message.edit_text("<b>üéü –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –æ–¥–Ω–æ–º—É –∫–ª–∏–µ–Ω—Ç—É –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑?</b>",
                                 reply_markup=promocode_create_one_client())


@dp.callback_query_handler(IsAdmin(), text_startswith="one_client:", state="*")
async def promocode_change_one_client(call: CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        res = call.data.split(":")[1]
        category_id = data['here_cache_category_id']
        promocode_type = data['here_change_promocode_type']
        promocode_name = data['here_promocode_name']
        activation_count = data['here_activation_count']
        print(f"{activation_count}")
        if activation_count == 0:
            promocode_valid_period = data['here_promo_code_validity_period']
        minimum_order_amount = data['here_minimum_order_amount']
        if promocode_type == "currency":
            discount_amount_currency = data['here_discount_amount_currency']
            promocode_type_ = "–≤–∞–ª—é—Ç–Ω—ã–π"
        elif promocode_type == "percentage":
            discount_amount_percentage = data['here_discount_amount_percentage']
            promocode_type_ = "–ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–π"
        first_buy = data['here_change_first_buy']
        one_client = res

        get_positions = len(get_positionsx(category_id=category_id))
        get_category = get_categoryx(category_id=category_id)

        await state.update_data(here_change_one_client=res)

        def test(count):
            if count == 0:
                return f"üéü –ü–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞: <code>{promocode_valid_period}</code>"
            else:
                return f"üéü –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥: <code>{activation_count}</code>"

        def test2(type_):
            if type_ == "currency":
                return f"üéü –í–∞–ª—é—Ç–Ω–∞—è —Å–∫–∏–¥–∫–∞: <code>{discount_amount_currency}</code>"
            elif type_ == "percentage":
                return f"üéü –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å–∫–∏–¥–∫–∞: <code>{discount_amount_percentage}</code>"

        await call.message.edit_text("<b>–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?</b>\n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                     f"üóÉ –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category['category_name']}</code>\n"
                                     f"üìÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{get_positions}—à—Ç</code>\n"
                                     f"üéü –¢–∏–ø –ø—Ä–æ–º–æ–∫–æ–¥–∞: <code>{promocode_type_}</code>\n"
                                     f"üéü –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞: <code>{promocode_name}</code>\n"
                                     f"{test(activation_count)}\n"
                                     f"üéü –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: <code>{minimum_order_amount}</code>\n"
                                     f"{test2(promocode_type)}\n"
                                     f"üéü –ü—Ä–æ–º–æ–∫–æ–¥ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É: <code>{first_buy}</code>\n"
                                     f"üéü –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑: <code>{one_client}</code>\n",
                                     reply_markup=promocode_create_confirm())


@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_create_confirm:", state="*")
async def get_promocode_create_confirm(call: CallbackQuery, state: FSMContext):
    async with state.proxy() as data:
        response = call.data.split(":")[1]
        print(f"{data}")
        category_id = data['here_cache_category_id']
        promocode_name = data['here_promocode_name']
        promocode_type = data['here_change_promocode_type']
        activation_count = data['here_activation_count']
        if activation_count == 0:
            promocode_valid_period = data['here_promo_code_validity_period']
        else:
            promocode_valid_period = "00.00.00"
        minimum_order_amount = data['here_minimum_order_amount']
        if promocode_type == "currency":
            discount_amount_currency = data['here_discount_amount_currency']
            discount_amount_percentage = 0
        elif promocode_type == "percentage":
            discount_amount_percentage = data['here_discount_amount_percentage']
            discount_amount_currency = 0
        first_buy = data['here_change_first_buy']
        one_client = data['here_change_one_client']

        if response == "yes":
            await state.finish()

            add_promocode(category_id, promocode_name, promocode_type, activation_count, minimum_order_amount, discount_amount_currency, discount_amount_percentage,
                          first_buy, one_client, promocode_valid_period)

            await call.message.delete()
            await call.message.answer("üéü –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –¥–ª—è –µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é", reply_markup=menu_frep(call.from_user.id))
        else:
            await state.finish()
            await call.message.delete()
            await call.message.answer("<b>üéü –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞.</b>", reply_markup=promocodes_frep())


# –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="promocodes_create_swipe:", state="*")
async def product_category_edit_swipe(call: CallbackQuery, state: FSMContext):
    remover = int(call.data.split(":")[1])

    await call.message.edit_text("<b>üóÉ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å—Å—è –ø—Ä–æ–º–æ–∫–æ–¥ üñç</b>",
                                 reply_markup=promocodes_create_swipe_fp(remover))


# –æ—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.callback_query_handler(IsAdmin(), text_startswith="position_edit_cancel", state="*")
async def product_category_edit_swipe(call: CallbackQuery, state: FSMContext):
    await state.finish()
    await call.message.answer("üî∏ –ë–æ—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n",
                              reply_markup=menu_frep(call.from_user.id))


#######################################################################
#################### –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ #########################
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@dp.message_handler(IsAdmin(), text="üéü –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ üñç", state="*")
async def promocodes_edit(message: Message, state: FSMContext):
    await state.finish()

    await state.set_state("get_promocode_name")
    await message.answer("<b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>")


# –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
@dp.message_handler(IsAdmin(), state="get_promocode_name")
async def promocode_edit_answer_menu(message: Message, state: FSMContext):
    prom = get_promocode(promocode_name=message.text)

    if prom is not None:
        await state.finish()
        amount = 0
        if prom['promocode_type'] == "currency":
            amount = prom['promocode_discount_amount_currency']
        elif prom['promocode_type'] == "percentage":
            amount = prom['promocode_discount_amount_percentage']

        await message.answer("<b>üéü –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞</b>\n"
                             f"–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞: <code>{prom['promocode_name']}</code>\n"
                             f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞: <code>{prom['promocode_minimum_order_amount']}</code>\n"
                             f"–°–∫–∏–¥–∫–∞: <code>{amount}</code>\n"
                             f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π: <code>{prom['promocode_activation_count']}</code>\n",
                             reply_markup=promocode_edit_menu(prom['promocode_name']))
    else:
        await message.answer("<b>–≠—Ç–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</b>\n"
                             "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–¥–∏–Ω —Ä–∞–∑.",
                             reply_markup=promocode_create_cancel_finl())


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_edit_name:", state="*")
async def edit_promocode_name(call: CallbackQuery, state: FSMContext):
    await state.finish()
    await call.answer(cache_time=60)
    await call.message.delete()
    prom_name = call.data.split(":")[1]

    await state.update_data(prom_name=prom_name)

    await state.set_state(f"promocode_edit_name_get")
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞")


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.message_handler(IsAdmin(), state='promocode_edit_name_get')
async def edit_promocode_name_get(message: Message, state: FSMContext):
    back_prom_name = (await state.get_data())['prom_name']

    update_promocode(back_prom_name, promocode_name=message.text)
    await state.finish()

    await message.answer(f"–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ <code>{message.text}</code>", reply_markup=promocodes_frep())


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_edit_minimum_order:", state="*")
async def edit_promocode_order(call: CallbackQuery, state: FSMContext):
    await state.finish()
    await call.answer(cache_time=60)
    await call.message.delete()
    prom_name = call.data.split(":")[1]

    await state.update_data(prom_name=prom_name)

    await state.set_state(f"promocode_edit_minimum_order")
    await call.message.answer("üéü –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º\n"
                              "<code>–í–≤–µ–¥–∏—Ç–µ 0 —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å—É–º–º—ã</code>")


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–≤–æ–π –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.message_handler(IsAdmin(), state="promocode_edit_minimum_order")
async def edit_promocode_order_get(message: Message, state: FSMContext):
    if message.text.isdigit():
        if 0 <= int(message.text) <= 10000000:
            prom_name = (await state.get_data())['prom_name']

            update_promocode(prom_name, promocode_minimum_order_amount=message.text)
            await state.finish()
            await message.answer("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞", reply_markup=promocodes_frep())
        else:
            await message.answer(
                "<b>‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1 –∏–ª–∏ –±–æ–ª—å—à–µ 10 000 000.</b>\n"
                "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                "üéü –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥\n"
                "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                "‚ùï –û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>0</code> —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞.",
                reply_markup=promocode_create_cancel_finl())
    else:
        await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.</b>\n"
                             "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                             "üéü –£–∫–∞–∂–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–º –ø—Ä–æ–º–æ–∫–æ–¥\n"
                             "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                             "‚ùï –û—Ç–ø—Ä–∞–≤—å—Ç–µ <code>0</code> —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∑–∞–∫–∞–∑–∞.",
                             reply_markup=promocode_create_cancel_finl())


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏, –∫–æ—Ç–æ—Ä—É—é –¥–∞—ë—Ç –ø—Ä–æ–º–æ–∫–æ–¥
@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_edit_discount:", state="*")
async def edit_promocode_discount(call: CallbackQuery, state: FSMContext):
    await state.finish()
    await call.answer(cache_time=60)
    await call.message.delete()
    prom_name = call.data.split(":")[1]
    prom = get_promocode(promocode_name=prom_name)

    await state.update_data(prom_name=prom_name)

    if prom['promocode_type'] == "currency":
        await state.set_state(f"promocode_edit_discount")
        await call.message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –≤–∞–ª—é—Ç–µ</b>\n"
                                  "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                  "<code>–ù–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100, –æ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –æ—Ç–Ω—è—Ç–æ 100 –≥—Ä–Ω. –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ —Å—É–º–º–∞ –±—ã–ª–∞ 400, —Ç–æ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏, —Å—É–º–º–∞ —Å—Ç–∞–Ω–µ—Ç 300.</code>\n"
                                  "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                  "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                                  )
    elif prom['promocode_type'] == "percentage":
        await state.set_state(f"promocode_edit_discount")
        await call.message.answer("<b>üéü –£–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö</b>\n"
                                  "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                  "<code>–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è 10. –°–∫–∏–¥–∫–∞ –±—É–¥–µ—Ç 10% —Ç.–µ. –ø—Ä–∏ –∫–æ–Ω–µ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ 100, –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç 90. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100 –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!!!</code>\n"
                                  "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                  "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n"
                                  )


# –ü—Ä–∏–Ω—è—Ç–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–∫–∏, –∫–æ—Ç–æ—Ä—É—é –¥–∞—ë—Ç –ø—Ä–æ–º–æ–∫–æ–¥
@dp.message_handler(IsAdmin(), state="promocode_edit_discount")
async def edit_promocode_discount_get(message: Message, state: FSMContext):
    prom_name = (await state.get_data())['prom_name']
    prom = get_promocode(promocode_name=prom_name)

    if prom['promocode_type'] == "currency":
        if message.text.isdigit():
            if 0 <= int(message.text) <= 10000000:
                update_promocode(prom_name, promocode_discount_amount_currency=message.text)
                await state.finish()
                await message.answer("üéü –ù–æ–≤–∞—è –≤–∞–ª—é—Ç–Ω–∞—è —Å–∫–∏–¥–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞", reply_markup=promocodes_frep())
            else:
                await message.answer("‚ùå –í–∞–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏ –±–æ–ª—å—à–µ 10 000 000."
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                     "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –≤–∞–ª—é—Ç–µ\n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                     "<code>–ù–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100, –æ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –æ—Ç–Ω—è—Ç–æ 100 –≥—Ä–Ω. –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ —Å—É–º–º–∞ –±—ã–ª–∞ 400, —Ç–æ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏, —Å—É–º–º–∞ —Å—Ç–∞–Ω–µ—Ç 300.</code>\n"
                                     "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                     "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                                     reply_markup=promocode_create_cancel_finl()
                                     )
        else:
            await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. <code>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º.</code></b>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –≤–∞–ª—é—Ç–µ\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "<code>–ù–∞–ø—Ä–∏–º–µ—Ä –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100, –æ—Ç –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞ –±—É–¥–µ—Ç –æ—Ç–Ω—è—Ç–æ 100 –≥—Ä–Ω. –¢–æ –µ—Å—Ç—å, –µ—Å–ª–∏ —Å—É–º–º–∞ –±—ã–ª–∞ 400, —Ç–æ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏, —Å—É–º–º–∞ —Å—Ç–∞–Ω–µ—Ç 300.</code>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                                 reply_markup=promocode_create_cancel_finl())
    elif prom['promocode_type'] == "percentage":
        if message.text.isdigit():
            if 0 <= int(message.text) <= 100:
                update_promocode(prom_name, promocode_discount_amount_percentage=message.text)
                await state.finish()
                await message.answer("<b>üéü –ù–æ–≤–∞—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å–∫–∏–¥–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞</b>", reply_markup=promocodes_frep())
            else:
                await message.answer(
                    "<b>‚ùå –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 0 –∏ –±–æ–ª—å—à–µ 100.</b>\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "<code>–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è 10. –°–∫–∏–¥–∫–∞ –±—É–¥–µ—Ç 10% —Ç.–µ. –ø—Ä–∏ –∫–æ–Ω–µ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ 100, –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç 90. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100 –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!!!</code>\n"
                    "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                    "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                    reply_markup=promocode_create_cancel_finl())
        else:
            await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. <code>–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–≤—ã–º.</code></b>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "üéü –£–∫–∞–∂–∏—Ç–µ —Å–∫–∏–¥–∫—É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "<code>–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏—è 10. –°–∫–∏–¥–∫–∞ –±—É–¥–µ—Ç 10% —Ç.–µ. –ø—Ä–∏ –∫–æ–Ω–µ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞ 100, –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ —Å—Ç–∞–Ω–µ—Ç 90. –ü—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–∏ 100 –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!!!</code>\n"
                                 "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                 "<code>–£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–ø–ª–∞—Ç–∏—Ç—å –∑–∞ —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.</code>\n",
                                 reply_markup=promocode_create_cancel_finl())


# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_edit_activation_count:", state="*")
async def edit_promocode_order(call: CallbackQuery, state: FSMContext):
    await state.finish()
    await call.answer(cache_time=60)
    await call.message.delete()
    prom_name = call.data.split(":")[1]

    await state.update_data(prom_name=prom_name)

    await state.set_state(f"promocode_edit_activation_count")
    await call.message.answer("üéü –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞")


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.message_handler(IsAdmin(), state="promocode_edit_activation_count")
async def edit_promocode_order_get(message: Message, state: FSMContext):
    prom_name = (await state.get_data())['prom_name']

    if message.text.isdigit():
        if 0 <= int(message.text) <= 10000000:
            if int(message.text) == 0:
                await message.answer("<b>üéü –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –±–µ—Å—Å—Ä–æ—á–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥, —Ç–æ –≤–∞–º –≤ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–¥–æ–≤</b>\n"
                                     "<code>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –Ω–∞ –ø—Ä–æ–º–æ–∫–æ–¥</code>")
            else:
                update_promocode(prom_name, promocode_activation_count=message.text)
                await state.finish()
                await message.answer("<b>üéü –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞, —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ</b>", reply_markup=promocodes_frep())
        else:
            await message.answer(
                "<b>‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1 –∏–ª–∏ –±–æ–ª—å—à–µ 10 000 000.</b>\n"
                "üéü –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥",
                reply_markup=promocode_create_cancel_finl())
    else:
        await message.answer("<b>‚ùå –î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.</b>\n"
                             "üéü –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥",
                             reply_markup=promocode_create_cancel_finl())


# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_delete:", state="*")
async def promocode_delete(call: CallbackQuery, state: FSMContext):
    prom_name = call.data.split(":")[1]
    await call.message.delete()

    remove_promocode(promocode_name=prom_name)
    await call.answer("–ü—Ä–æ–º–æ–∫–æ–¥ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω", False)
    await call.message.delete()


# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
@dp.message_handler(IsAdmin(), text="üéü –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã ‚ùå", state="*")
async def promocodes_edit(message: Message, state: FSMContext):
    await state.finish()

    await message.answer("<b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã?</b>",
                         reply_markup=promocode_delete_confirm())


@dp.callback_query_handler(IsAdmin(), text_startswith="promocode_delete_confirm:", state="*")
async def promocode_delete(call: CallbackQuery, state: FSMContext):
    data = call.data.split(":")[1]

    if data == "yes":
        clear_promocode()
        clear_promocode_activation_user()
        await call.answer("–í—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã", False)
        await call.message.delete()
    else:
        await call.message.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤", reply_markup=menu_frep(call.from_user.id))
        await call.message.delete()
