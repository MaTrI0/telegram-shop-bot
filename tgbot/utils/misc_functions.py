# - *- coding: utf- 8 - *-
import asyncio
import json

from aiogram import Dispatcher
from bs4 import BeautifulSoup

from tgbot.data.config import get_admins, BOT_VERSION, BOT_DESCRIPTION, PATH_DATABASE
from tgbot.data.loader import bot
from tgbot.keyboards.reply_all import menu_frep
from tgbot.services.api_session import AsyncSession
from tgbot.services.api_sqlite import get_settingsx, update_settingsx, get_userx, get_purchasesx, get_all_positionsx, \
    update_positionx, get_all_categoriesx, get_all_purchasesx, get_all_usersx, \
    get_positionx, get_categoryx, get_user_cart
from tgbot.utils.const_functions import get_unix, convert_day, get_date, ded


# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
async def on_startup_notify(dp: Dispatcher, aSession: AsyncSession):
    if len(get_admins()) >= 1:
        await send_admins(ded(f"""
                          <b>‚úÖ –ë–æ—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω</b>
                          ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
                          {BOT_DESCRIPTION}
                          ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
                          <code>‚ùó –î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞.</code>
                          """),
                          markup="default")


# –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
async def send_admins(message, markup=None, not_me=0):
    for admin in get_admins():
        if markup == "default": markup = menu_frep(admin)

        try:
            if str(admin) != str(not_me):
                await bot.send_message(admin, message, reply_markup=markup, disable_web_page_preview=True)
        except:
            pass


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—Å–ª–µ 00:00
async def update_profit_day():
    await send_admins(get_statisctics())

    update_settingsx(misc_profit_day=get_unix())


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 00:01
async def update_profit_week():
    update_settingsx(misc_profit_week=get_unix())


# –ê–≤—Ç–æ–±—ç–∫–∞–ø—ã –ë–î –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
async def autobackup_admin():
    for admin in get_admins():
        with open(PATH_DATABASE, "rb") as document:
            try:
                await bot.send_document(admin,
                                        document,
                                        caption=f"<b>üì¶ AUTOBACKUP</b>\n"
                                                f"üï∞ <code>{get_date()}</code>")
            except:
                pass


# –ü–æ–ª—É—á–µ–Ω–∏–µ faq
def get_faq(user_id, send_message):
    get_user = get_userx(user_id=user_id)

    if "{user_id}" in send_message:
        send_message = send_message.replace("{user_id}", f"<b>{get_user['user_id']}</b>")
    if "{username}" in send_message:
        send_message = send_message.replace("{username}", f"<b>{get_user['user_login']}</b>")
    if "{firstname}" in send_message:
        send_message = send_message.replace("{firstname}", f"<b>{get_user['user_name']}</b>")

    return send_message


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏–µ –ë–î –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –±–æ—Ç–∞ –≤ –Ω–æ–≤–æ–≥–æ –∏–ª–∏ —É–∫–∞–∑–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
async def check_bot_data():
    get_login = get_settingsx()['misc_bot']
    get_bot = await bot.get_me()

    if get_login not in [get_bot.username, "None"]:
        get_positions = get_all_positionsx()

        for position in get_positions:
            update_positionx(position['position_id'], position_photo="")

    update_settingsx(misc_bot=get_bot.username)


# –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
def get_position_admin(position_id):
    get_settings = get_settingsx()
    get_position = get_positionx(position_id=position_id)
    get_purchases = get_purchasesx(purchase_position_id=position_id)
    get_category = get_categoryx(category_id=get_position['category_id'])

    show_profit_amount_all, show_profit_amount_day, show_profit_amount_week = 0, 0, 0
    show_profit_count_all, show_profit_count_day, show_profit_count_week = 0, 0, 0
    text_description = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"
    photo_text = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"
    color_text = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"
    size_text = "<code>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚ùå</code>"
    courier_delivery_text = "<code>–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ ‚ùå</code>"
    by_mail_russia_text = "<code>–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ ‚ùå</code>"
    transport_company_text = "<code>–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ ‚ùå</code>"
    get_photo = None

    if len(get_position['position_photo']) >= 5:
        photo_text = "<code>–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚úÖ</code>"
        get_photo = get_position['position_photo']

    if get_position['position_description'] != "0":
        text_description = f"\n{get_position['position_description']}"

    if get_position["position_colors"] != "":
        color_text = f"{get_position['position_colors']}"

    if get_position["position_sizes"] != "":
        size_text = f"{get_position['position_sizes']}"

    if get_position["courier_delivery_price"] != 0:
        courier_delivery_text = f"{get_position['courier_delivery_price']}—Ä—É–±."

    if get_position["by_mail_russia_price"] != 0:
        by_mail_russia_text = f"{get_position['by_mail_russia_price']}—Ä—É–±"

    if get_position["transport_company_price"] != 0:
        transport_company_text = f"{get_position['transport_company_price']}—Ä—É–±"

    for purchase in get_purchases:
        show_profit_amount_all += purchase['purchase_price']
        show_profit_count_all += purchase['purchase_count']

        if purchase['purchase_unix'] - get_settings['misc_profit_day'] >= 0:
            show_profit_amount_day += purchase['purchase_price']
            show_profit_count_day += purchase['purchase_count']
        if purchase['purchase_unix'] - get_settings['misc_profit_week'] >= 0:
            show_profit_amount_week += purchase['purchase_price']
            show_profit_count_week += purchase['purchase_count']

    # üì¶ –ö—ñ–ª—å–∫—ñ—Å—Ç—å: < code > {int(get_position['position_count'])}—à—Ç < / code >

    get_message = ded(f"""
                  <b>üìÅ –¢–æ–≤–∞—Ä: <code>{get_position['position_name']}</code></b>
                  ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
                  üóÉ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category['category_name']}</code>
                  üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: <code>{get_position['position_price']}—Ä—É–±.</code>
                  üé® –¶–≤–µ—Ç–∞: <code>{color_text}</code>
                  üìè –†–∞–∑–º–µ—Ä—ã: <code>{size_text}</code>
                  üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º: <code>{courier_delivery_text}</code>
                  üè£ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ—á—Ç–æ–π –†–æ—Å—Å–∏–∏: <code>{by_mail_russia_text}</code>
                  üöö –î–æ—Å—Ç–∞–≤–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π: <code>{transport_company_text}</code>
                  üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {photo_text}
                  üìú –û–ø–∏—Å–∞–Ω–∏–µ: {text_description}

                  üí∏ –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –î–µ–Ω—å: <code>{show_profit_count_day}—à—Ç</code> - <code>{show_profit_amount_day}—Ä—É–±.</code>
                  üí∏ –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –Ω–µ–¥–µ–ª—é: <code>{show_profit_count_week}—à—Ç</code> - <code>{show_profit_amount_week}—Ä—É–±.</code>
                  üí∏ –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: <code>{show_profit_count_all}—à—Ç</code> - <code>{show_profit_amount_all}—Ä—É–±.</code>
                  """)

    return get_message, get_photo


# –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
def open_profile_user(user_id):
    get_purchases = get_purchasesx(user_id=user_id)
    get_user = get_userx(user_id=user_id)

    how_days = int(get_unix() - get_user['user_unix']) // 60 // 60 // 24
    count_items = sum([items['purchase_count'] for items in get_purchases])

    return ded(f"""
           <b>üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>
           ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
           üÜî ID: <code>{get_user['user_id']}</code>
           üéÅ –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{count_items}—à—Ç</code>
           üï∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: <code>{get_user['user_date'].split(' ')[0]} ({convert_day(how_days)})</code>
           """)


# –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
def open_profile_admin(user_id):
    get_purchases = get_purchasesx(user_id=user_id)
    get_user = get_userx(user_id=user_id)

    how_days = int(get_unix() - get_user['user_unix']) // 60 // 60 // 24
    count_items = sum([items['purchase_count'] for items in get_purchases])

    cart_item = 0
    get_user_cart_items = get_user_cart(user_id=user_id)

    if get_user_cart_items is None:
        pass
    else:
        for items in get_user_cart_items:
            cart_item += 1

    return ded(f"""
           <b>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <a href='tg://user?id={get_user['user_id']}'>{get_user['user_name']}</a></b>
           ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
           üÜî ID: <code>{get_user['user_id']}</code>
           üë§ –õ–æ–≥–∏–Ω: <b>@{get_user['user_login']}</b>
           ‚ìÇ –ò–º—è: <a href='tg://user?id={get_user['user_id']}'>{get_user['user_name']}</a>
           üï∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: <code>{get_user['user_date']} ({convert_day(how_days)})</code>
            
           üéÅ –ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <code>{count_items}—à—Ç</code>
           üõí –¢–æ–≤–∞—Ä–æ–≤ –∫ –∫–æ—Ä–∑–∏–Ω–µ: <code>{cart_item}—à—Ç</code>
           """)


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
def get_statisctics():
    show_profit_amount_all, show_profit_amount_day, show_profit_amount_week = 0, 0, 0
    show_profit_count_all, show_profit_count_day, show_profit_count_week = 0, 0, 0
    show_users_all, show_users_day, show_users_week, show_users_money = 0, 0, 0, 0

    get_categories = get_all_categoriesx()
    get_positions = get_all_positionsx()
    get_purchases = get_all_purchasesx()
    get_settings = get_settingsx()
    get_users = get_all_usersx()
    #
    # for position in get_positions:
    #     position_item_count = position['position_count']

    for purchase in get_purchases:
        show_profit_amount_all += purchase['purchase_price']
        show_profit_count_all += purchase['purchase_count']

        if purchase['purchase_unix'] - get_settings['misc_profit_day'] >= 0:
            show_profit_amount_day += purchase['purchase_price']
            show_profit_count_day += purchase['purchase_count']
        if purchase['purchase_unix'] - get_settings['misc_profit_week'] >= 0:
            show_profit_amount_week += purchase['purchase_price']
            show_profit_count_week += purchase['purchase_count']

    for user in get_users:
        show_users_all += 1

        if user['user_unix'] - get_settings['misc_profit_day'] >= 0:
            show_users_day += 1
        if user['user_unix'] - get_settings['misc_profit_week'] >= 0:
            show_users_week += 1

    return ded(f"""
           <b>üìä –°–¢–ê–¢–£–°–´ –ë–û–¢–ê</b>
           ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
           <b>üî∂ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ üî∂</b>
           üë§ –Æ–∑–µ—Ä–æ–≤ –∑–∞ –¥–µ–Ω—å: <code>{show_users_day}</code>
           üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –Ω–µ–¥–µ–ª—é: <code>{show_users_week}</code>
           üë§ –Æ–∑–µ—Ä–æ–≤ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: <code>{show_users_all}</code>
            
           <b>üî∂ –°—Ä–µ–¥—Å—Ç–≤–∞ üî∂</b>
           üí∏ –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –¥–µ–Ω—å: <code>{show_profit_count_day}—à—Ç</code> - <code>{show_profit_amount_day}—Ä—É–±.</code>
           üí∏ –ü—Ä–æ–¥–∞–∂–∏ –∑–∞ –Ω–µ–¥–µ–ª—é: <code>{show_profit_count_week}—à—Ç</code> - <code>{show_profit_amount_week}—Ä—É–±.</code>
           üí∏ –ü—Ä–æ–¥–∞–∂ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: <code>{show_profit_count_all}—à—Ç</code> - <code>{show_profit_amount_all}—Ä—É–±.</code>
            
           <b>üî∂ –î—Ä—É–≥–æ–µ üî∂</b>
           üéÅ –ü–æ–∑–∏—Ü–∏–∏: <code>{len(get_positions)}—à—Ç</code>
           üóÉ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: <code>{len(get_categories)}—à—Ç</code>
           
           """)
# üéÅ –¢–æ–≤–∞—Ä—ã: < code > {int(position_item_count)}—à—Ç < / code >


def cart_logistic(user_id):
    HEADER_CART = f"""
        üõí –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞: 
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        """

    text = """"""
    i = 0
    cost = 0

    get_cart_items = get_user_cart(user_id=user_id)

    if not get_cart_items:
        return None

    for item in get_cart_items:
        get_position = get_positionx(position_id=item.get("position_id"))
        text += f"""
    {i+1}) üè∑ –ù–∞–∑–≤–∞–Ω–∏–µ: {get_position.get("position_name")}
         üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item.get("position_count")}
         üìè –†–∞–∑–º–µ—Ä: {item.get("position_size")}
         üé® –¶–≤–µ—Ç: {item.get("position_color")}
         üí∞ –¶–µ–Ω–∞: {item.get("position_price")}
             
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
        """

        i += 1
        cost += item.get("position_price")

    end_text = f"""
    
    üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤: {cost}
    üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: {i}
    """

    response = HEADER_CART + text + end_text

    return response
